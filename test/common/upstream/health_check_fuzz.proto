syntax = "proto3";

package test.common.upstream;

import "test/fuzz/common.proto";
import "envoy/config/core/v3/health_check.proto";

message Respond {
  test.fuzz.Headers headers = 1; //TODO: Add validation for path in any case
  string status =
      2; //Add validation that all the characters are between 0 - 9, or ' ', would something like "9 00 9" pass?, and require it
  bool respond_on_second_host =
      3; //If there's a second host, this will determine which host, if not ignore
}

message StreamCreate {
    bool create_stream_on_second_host = 1;
}

message AdvanceTime {
  int32 ms_advanced = 1; //Cap this at something
}

message HttpAction {
  oneof action_selector {
    Respond respond = 1;
    StreamCreate stream_create = 2;
    //TODO: time advancement, multiple hosts (maps to other two as well), separate respondBody, respondTrailers, nameMatcher thing
    AdvanceTime advance_time = 3;
  }
}

message HealthCheckTestCase {
  envoy.config.core.v3.HealthCheck health_check_config = 1;
  repeated HttpAction http_actions = 2;
  //repeated TcpAction tcp_actions = 3;
  //repeated GrpcAction grpc_actions = 4;
  bool second_host = 5;
}
