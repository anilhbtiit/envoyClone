# An example config which accepts HTTP/3 and forwards the requests upstream over TCP.
# This includes a TCP listener which advertises that HTTP/3 is available via the alt-svc header
admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 8001
static_resources:
  listeners:
  - name: listener_tcp_10000 # for HTTP/3 request from clients
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            # The following self-signed certificate pair is generated using:
            # $ openssl req -x509 -newkey rsa:2048 -keyout a/key.pem -out a/crt.pem -days 3650 -nodes -subj '/CN=MyExample'
            #
            # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
            # via filename. Reference: https://google.com/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
            #
            # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
            # Secret Discovery Service (SDS). Reference: https://google.com/docs/envoy/latest/configuration/security/secret.
            - certificate_chain:
                inline_string: |
                  -----BEGIN CERTIFICATE-----
                  MIIDcTCCAlmgAwIBAgIUFXJRSSVAaxkbMUzMgeH8Oh7J0lIwDQYJKoZIhvcNAQEL
                  BQAwSDELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRgwFgYDVQQKDA9NeUV4YW1w
                  bGUsIEluYy4xEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0yMjExMDkxNjU4MzJaFw0y
                  MzExMDkxNjU4MzJaMEgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEYMBYGA1UE
                  CgwPTXlFeGFtcGxlLCBJbmMuMRIwEAYDVQQDDAlsb2NhbGhvc3QwggEiMA0GCSqG
                  SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOZe/oyRd7JUmytRMzNuctrSIzNnSRlzZb
                  t2Pbs0w5hUWPK1+mYqSpjZ1Lu2SCuiHBf0lL+FbUcPXcic9vry2gy2+2Tq2or7Zt
                  zcN3TSNWAByGPTfAswMoeIOAIe8tyKIAY9sPBZ95Mmc1Iv7SkqEh2SDmeJ+OrHA7
                  9tPWxvpOfmXVjcSUyLnPRuoR+J8boztCNsXObvrQL9ad6yeCXRb81CfLhDIFdGIq
                  t20ybaJ7H9YLL19QOxLnXIGqj0e4ly1hV1ZNVzD/59PqhyvidXF/0QdCzhmGcR2k
                  JWzi141npgF3T6vSqlyYIJYFgfxpoVlCw3e5LRjbnFv8aFW19JH3AgMBAAGjUzBR
                  MB0GA1UdDgQWBBTuuq5X6FMxIq93DMtSE8BfvBY9VDAfBgNVHSMEGDAWgBTuuq5X
                  6FMxIq93DMtSE8BfvBY9VDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUA
                  A4IBAQC+Yn0pPrVSUBg49AqupUiHIDXgueG7c0TptGGfEcLNZriVX9Nxkj7u89u6
                  7Ve8uolxhJksalVZBHt186FMJJSXJ+f3S3+0WITy1pogxoFEaXUSFqOn1sJE86SC
                  kBCm+HhhHE8Oewsy1fzuOUT+P9vLu1kTvCeV+cvbLd/EngrCXTLm0umE5Qt0M7ne
                  XdmavvNhEea2F6dtUs3PQJNSiNOrXuRIJpYaDLnalliNwsNRghxIjieEZtrtDX2J
                  2zdfoe6Hg0VcimSbEtRaHVgkdLkub00L0p3jBbfaD9yBXz1HC82BfAnr0bxQ//n+
                  1nrQcZXZ5ZJTkoKOLFpviStHU20/
                  -----END CERTIFICATE-----
              private_key:
                inline_string: |
                  -----BEGIN PRIVATE KEY-----
                  MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDOZe/oyRd7JUmy
                  tRMzNuctrSIzNnSRlzZbt2Pbs0w5hUWPK1+mYqSpjZ1Lu2SCuiHBf0lL+FbUcPXc
                  ic9vry2gy2+2Tq2or7ZtzcN3TSNWAByGPTfAswMoeIOAIe8tyKIAY9sPBZ95Mmc1
                  Iv7SkqEh2SDmeJ+OrHA79tPWxvpOfmXVjcSUyLnPRuoR+J8boztCNsXObvrQL9ad
                  6yeCXRb81CfLhDIFdGIqt20ybaJ7H9YLL19QOxLnXIGqj0e4ly1hV1ZNVzD/59Pq
                  hyvidXF/0QdCzhmGcR2kJWzi141npgF3T6vSqlyYIJYFgfxpoVlCw3e5LRjbnFv8
                  aFW19JH3AgMBAAECggEAUJ8Z5Nyz6troXEGF4/H0wG9KFiYVx48A4TeT7owtYKSR
                  xLhlDummN0LFaAElZDkPmXU+bMnvJOGQ8Bn2qMINOStuEhDOnb8xK9f9m7rKbDvz
                  6G2+OuvR9nuIpkLbGg+uVCetOENyhRVuoh9u2VMEVOPrCYuhi8oItyuVmOY1fPYH
                  v5saUA30yTgY7n9oxBrgLvuPwWlfBvxn++TVZvJ2ofrsVHC3s3AQkn6CHJbUxmfw
                  /S2hlbrK50T47X3Kw8fBnSywLPba47Njlx39gggv4MZljcAaYLkIDLY5zYlPwyCm
                  wPcDcICc3DjyqBRV/FZdQi/Ii+ha1VpPPDJL9ws1jQKBgQDaMI0oUVGDZKLl5Aw3
                  wjVbpg+FD98C/r7pJR0V0SWcyDobS8lT5Rj5Emzg/S/y5xAtMi3AkU+HSJfdhvhT
                  UxbewzNzErh6lS5om6j0uieonAcCt57JA8rgIAax2kRfIgvahZPmrJqak2qenclk
                  qh9h4MoBuC+7z4yZSwAv0pL2JQKBgQDyKklWb4OLXdEM+oYncWSroBiQs4LJ1CMI
                  ChbxTH7/eohV21OGNUeikgccPWRF4QFpC5TD7YrP6niJp2PZ4p+ZSO41Q5mPFeek
                  ZOXMopgjF4mSvXBxyaljPAGBP+9TFpUEqZWa9nM56ErLqLZgh7+C9wWebYC394E2
                  PDWPdjzG6wKBgD8ppvNw9wPucinS5qaNlhy96eg/O/QGAwZDNDRIo3bLj+au/c1H
                  mP8hkltfcC4FLe2nhQ8mAbvMDAqZM/ILL6e1IoPBe54g6Zpm1XZjHW/2GyFyPok6
                  i9Rt8QIziW9wz7WmzbYNaYQuAMOCMfbuOL+A73mn9EmOP8lwqNEvSFPxAoGBALkF
                  RfMcUEzy6P4ZitYn9NqL/zjPbmX2Bq3lx5Gk+IMJg5DVegNYQdsb5wLUhQA+4Wz4
                  xDjODPi+FEpX8hpO49Ghvx5C/9gqzEj2Lf0jXUmyehH7WyYVBa4j8qJlztyUrFZb
                  m0pCcdcUe9EOngkyrkfJpClfULE+ESL27ZUmqVjxAoGATvsyRbVlkjs6VJlDrXPh
                  Xl3YuKYXFesJ3/4wQUcTIpmB682RGsQTQjbOhvq6sbYe3wORpm/DNAQtvA/QAZs9
                  M/I0Xutq3KABYstDmd2d+CKU0ii8++IupYYyMV6NuGrd2tWi09oiEyOYrb+IGfmt
                  6+lCO6FCYXkvnjKrJoPuxKE=
                  -----END PRIVATE KEY-----
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: HTTP2
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              response_headers_to_add:
              - header:
                  key: alt-svc
                  value: h3=":10000"; ma=86400, h3-29=":10000"; ma=86400
              domains: ["*"]
              routes:
              - match:
                  prefix: "/downstream-http3-to-upstream-http1"
                route:
                  host_rewrite_literal: envoyproxy.io
                  cluster: service_envoyproxy_io
              - match:
                  prefix: "/downstream-http3-to-upstream-http2"
                route:
                  host_rewrite_literal: envoyproxy.io
                  cluster: service_envoyproxy_io_http2
          http3_protocol_options:
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  - name: listener_udp_10000 # for HTTP/3 request from clients
    address:
      socket_address:
        protocol: UDP
        address: 0.0.0.0
        port_value: 10000
    udp_listener_config:
      quic_options: {}
      downstream_socket_config:
        prefer_gro: true
    filter_chains:
    - transport_socket:
        name: envoy.transport_sockets.quic
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport
          downstream_tls_context:
            common_tls_context:
              tls_certificates:
              # The following self-signed certificate pair is generated using:
              # $ openssl req -x509 -newkey rsa:2048 -keyout a/key.pem -out a/crt.pem -days 3650 -nodes -subj '/CN=MyExample'
              #
              # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
              # via filename. Reference: https://google.com/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
              #
              # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
              # Secret Discovery Service (SDS). Reference: https://google.com/docs/envoy/latest/configuration/security/secret.
              - certificate_chain:
                  inline_string: |
                    -----BEGIN CERTIFICATE-----
                    MIIDcTCCAlmgAwIBAgIUFXJRSSVAaxkbMUzMgeH8Oh7J0lIwDQYJKoZIhvcNAQEL
                    BQAwSDELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRgwFgYDVQQKDA9NeUV4YW1w
                    bGUsIEluYy4xEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0yMjExMDkxNjU4MzJaFw0y
                    MzExMDkxNjU4MzJaMEgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEYMBYGA1UE
                    CgwPTXlFeGFtcGxlLCBJbmMuMRIwEAYDVQQDDAlsb2NhbGhvc3QwggEiMA0GCSqG
                    SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOZe/oyRd7JUmytRMzNuctrSIzNnSRlzZb
                    t2Pbs0w5hUWPK1+mYqSpjZ1Lu2SCuiHBf0lL+FbUcPXcic9vry2gy2+2Tq2or7Zt
                    zcN3TSNWAByGPTfAswMoeIOAIe8tyKIAY9sPBZ95Mmc1Iv7SkqEh2SDmeJ+OrHA7
                    9tPWxvpOfmXVjcSUyLnPRuoR+J8boztCNsXObvrQL9ad6yeCXRb81CfLhDIFdGIq
                    t20ybaJ7H9YLL19QOxLnXIGqj0e4ly1hV1ZNVzD/59PqhyvidXF/0QdCzhmGcR2k
                    JWzi141npgF3T6vSqlyYIJYFgfxpoVlCw3e5LRjbnFv8aFW19JH3AgMBAAGjUzBR
                    MB0GA1UdDgQWBBTuuq5X6FMxIq93DMtSE8BfvBY9VDAfBgNVHSMEGDAWgBTuuq5X
                    6FMxIq93DMtSE8BfvBY9VDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUA
                    A4IBAQC+Yn0pPrVSUBg49AqupUiHIDXgueG7c0TptGGfEcLNZriVX9Nxkj7u89u6
                    7Ve8uolxhJksalVZBHt186FMJJSXJ+f3S3+0WITy1pogxoFEaXUSFqOn1sJE86SC
                    kBCm+HhhHE8Oewsy1fzuOUT+P9vLu1kTvCeV+cvbLd/EngrCXTLm0umE5Qt0M7ne
                    XdmavvNhEea2F6dtUs3PQJNSiNOrXuRIJpYaDLnalliNwsNRghxIjieEZtrtDX2J
                    2zdfoe6Hg0VcimSbEtRaHVgkdLkub00L0p3jBbfaD9yBXz1HC82BfAnr0bxQ//n+
                    1nrQcZXZ5ZJTkoKOLFpviStHU20/
                    -----END CERTIFICATE-----
                private_key:
                  inline_string: |
                    -----BEGIN PRIVATE KEY-----
                    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDOZe/oyRd7JUmy
                    tRMzNuctrSIzNnSRlzZbt2Pbs0w5hUWPK1+mYqSpjZ1Lu2SCuiHBf0lL+FbUcPXc
                    ic9vry2gy2+2Tq2or7ZtzcN3TSNWAByGPTfAswMoeIOAIe8tyKIAY9sPBZ95Mmc1
                    Iv7SkqEh2SDmeJ+OrHA79tPWxvpOfmXVjcSUyLnPRuoR+J8boztCNsXObvrQL9ad
                    6yeCXRb81CfLhDIFdGIqt20ybaJ7H9YLL19QOxLnXIGqj0e4ly1hV1ZNVzD/59Pq
                    hyvidXF/0QdCzhmGcR2kJWzi141npgF3T6vSqlyYIJYFgfxpoVlCw3e5LRjbnFv8
                    aFW19JH3AgMBAAECggEAUJ8Z5Nyz6troXEGF4/H0wG9KFiYVx48A4TeT7owtYKSR
                    xLhlDummN0LFaAElZDkPmXU+bMnvJOGQ8Bn2qMINOStuEhDOnb8xK9f9m7rKbDvz
                    6G2+OuvR9nuIpkLbGg+uVCetOENyhRVuoh9u2VMEVOPrCYuhi8oItyuVmOY1fPYH
                    v5saUA30yTgY7n9oxBrgLvuPwWlfBvxn++TVZvJ2ofrsVHC3s3AQkn6CHJbUxmfw
                    /S2hlbrK50T47X3Kw8fBnSywLPba47Njlx39gggv4MZljcAaYLkIDLY5zYlPwyCm
                    wPcDcICc3DjyqBRV/FZdQi/Ii+ha1VpPPDJL9ws1jQKBgQDaMI0oUVGDZKLl5Aw3
                    wjVbpg+FD98C/r7pJR0V0SWcyDobS8lT5Rj5Emzg/S/y5xAtMi3AkU+HSJfdhvhT
                    UxbewzNzErh6lS5om6j0uieonAcCt57JA8rgIAax2kRfIgvahZPmrJqak2qenclk
                    qh9h4MoBuC+7z4yZSwAv0pL2JQKBgQDyKklWb4OLXdEM+oYncWSroBiQs4LJ1CMI
                    ChbxTH7/eohV21OGNUeikgccPWRF4QFpC5TD7YrP6niJp2PZ4p+ZSO41Q5mPFeek
                    ZOXMopgjF4mSvXBxyaljPAGBP+9TFpUEqZWa9nM56ErLqLZgh7+C9wWebYC394E2
                    PDWPdjzG6wKBgD8ppvNw9wPucinS5qaNlhy96eg/O/QGAwZDNDRIo3bLj+au/c1H
                    mP8hkltfcC4FLe2nhQ8mAbvMDAqZM/ILL6e1IoPBe54g6Zpm1XZjHW/2GyFyPok6
                    i9Rt8QIziW9wz7WmzbYNaYQuAMOCMfbuOL+A73mn9EmOP8lwqNEvSFPxAoGBALkF
                    RfMcUEzy6P4ZitYn9NqL/zjPbmX2Bq3lx5Gk+IMJg5DVegNYQdsb5wLUhQA+4Wz4
                    xDjODPi+FEpX8hpO49Ghvx5C/9gqzEj2Lf0jXUmyehH7WyYVBa4j8qJlztyUrFZb
                    m0pCcdcUe9EOngkyrkfJpClfULE+ESL27ZUmqVjxAoGATvsyRbVlkjs6VJlDrXPh
                    Xl3YuKYXFesJ3/4wQUcTIpmB682RGsQTQjbOhvq6sbYe3wORpm/DNAQtvA/QAZs9
                    M/I0Xutq3KABYstDmd2d+CKU0ii8++IupYYyMV6NuGrd2tWi09oiEyOYrb+IGfmt
                    6+lCO6FCYXkvnjKrJoPuxKE=
                    -----END PRIVATE KEY-----
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: HTTP3
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/downstream-http3-to-upstream-http1"
                route:
                  host_rewrite_literal: envoyproxy.io
                  cluster: service_envoyproxy_io
              - match:
                  prefix: "/downstream-http3-to-upstream-http2"
                route:
                  host_rewrite_literal: envoyproxy.io
                  cluster: service_envoyproxy_io_http2
          http3_protocol_options:
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  - name: listener_tcp_10001 # for HTTP/1.1 or HTTP/2 request from clients
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/downstream-http1-to-upstream-http3"
                route:
                  host_rewrite_literal: google.com
                  cluster: service_google_com
              - match:
                  prefix: "/downstream-http2-to-upstream-http3"
                route:
                  host_rewrite_literal: google.com
                  cluster: service_google_com
          http_filters:
          - name: alternate_protocols_cache
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.alternate_protocols_cache.v3.FilterConfig
              alternate_protocols_cache_options:
                name: default_alternate_protocols_cache
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: service_envoyproxy_io
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_envoyproxy_io
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: envoyproxy.io
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: envoyproxy.io
  - name: service_envoyproxy_io_http2
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_envoyproxy_io_http2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: envoyproxy.io
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: envoyproxy.io
  - name: service_google_com
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_google_com
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: google.com
                port_value: 443
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http3_protocol_options: {}
        common_http_protocol_options:
          idle_timeout: 1s
    transport_socket:
      name: envoy.transport_sockets.quic
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport
        upstream_tls_context:
          sni: google.com
