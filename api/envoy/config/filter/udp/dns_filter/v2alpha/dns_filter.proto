syntax = "proto3";

package envoy.config.filter.udp.dns_filter.v2alpha;

import "google/protobuf/duration.proto";

import "udpa/annotations/status.proto";

import "udpa/annotations/migrate.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.filter.udp.dns_filter.v2alpha";
option java_outer_classname = "DnsFilterProto";
option java_multiple_files = true;
option (udpa.annotations.file_migrate).move_to_package =
    "envoy.extensions.filters.udp.dns_filter.v3";
option (udpa.annotations.file_status).work_in_progress = true;

// Configuration for the DNS filter.
message DnsFilterConfig {
  // Specify the method of determining the address of a given endpoint
  enum EndpointType { STATIC = 0; }

  // This message type is extensible and can contain a list of addresses
  // or dictate some other method for resolving the addresses for an
  // endpoint
  message DnsEndpoint {
    EndpointType type = 1;

    // A list of IP addresses Envoy returns to queries for the given domain
    repeated string address = 2;
  }

  message DnsVirtualDomain {
    // The domain name for which Envoy will respond to query requests
    string name = 1 [(validate.rules).string = {min_len: 2}];

    // The configuration containing the method to determine the address
    // of this endpoint
    DnsEndpoint endpoint = 2;
  }

  // This message contains the configuration for the Dns Filter operating
  // in a server context. This message will contain the virtual hosts and
  // associated addresses with which Envoy will respond to queries
  message ServerCtxConfig {
    uint32 retry_count = 1;

    // Fully qualified domain names for which Envoy will respond to queries
    repeated DnsVirtualDomain virtual_domains = 2 [(validate.rules).repeated = {min_items: 1}];

    // Sets the TTL in dns answers from Envoy returned to the client
    google.protobuf.Duration answer_ttl = 3 [(validate.rules).duration = {gt {}}];

    // Seed the virtual domain configuration from an external path
    string virtual_domain_cfg = 4;
  }

  // The stat prefix used when emitting DNS filter stats.
  string stat_prefix = 1 [(validate.rules).string = {min_len: 1}];

  // Server context configuration
  ServerCtxConfig server_config = 2;
}
