syntax = "proto3";

package envoy.extensions.original_ip_detection.common.v3;

import "envoy/type/v3/http_status.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.original_ip_detection.common.v3";
option java_outer_classname = "OriginalIpDetectionProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Common original IP detection types]
// [#next-free-field: 6]
message OriginalIPDetectionCommonConfig {
  // Is the detected address trusted (e.g.: can it be used to determine if this is an internal
  // request).
  bool allow_trusted_address_checks = 1;

  // If true, requests for which either the configured header is missing or parsing an IP from its
  // value fails will be rejected.
  bool reject_request_if_detection_fails = 2;

  // If reject_request_if_detection_fails is set, this sets the HTTP status that is returned to the client
  // when detection fails. The default status is HTTP 403 Forbidden.
  type.v3.HttpStatus status_on_error = 3;

  // If reject_request_if_detection_fails is set, this sets the HTTP body that is returned to the client
  // when detection fails.
  string body_on_error = 4;

  // If reject_request_if_detection_fails is set, this sets the a string detailing why this local reply was sent.
  string details_on_error = 5;
}
