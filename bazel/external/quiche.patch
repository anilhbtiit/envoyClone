--- http2/adapter/callback_visitor.h
+++ http2/adapter/callback_visitor.h
@@ -8,6 +8,10 @@
 #include "absl/container/flat_hash_map.h"
 #include "http2/adapter/http2_visitor_interface.h"
 #include "http2/adapter/nghttp2_util.h"
+
+// Required to build on Windows.
+typedef ptrdiff_t ssize_t;
+
 #include "third_party/nghttp2/src/lib/includes/nghttp2/nghttp2.h"
 #include "common/platform/api/quiche_export.h"

--- http2/adapter/http2_protocol.h
+++ http2/adapter/http2_protocol.h
@@ -10,6 +10,8 @@
 #include "absl/types/variant.h"
 #include "common/platform/api/quiche_export.h"

+#undef NO_ERROR
+
 namespace http2 {
 namespace adapter {

--- http2/adapter/nghttp2_callbacks.h
+++ http2/adapter/nghttp2_callbacks.h
@@ -5,6 +5,10 @@

 #include "http2/adapter/http2_protocol.h"
 #include "http2/adapter/nghttp2_util.h"
+
+// Required to build on Windows.
+typedef ptrdiff_t ssize_t;
+
 #include "third_party/nghttp2/src/lib/includes/nghttp2/nghttp2.h"

 namespace http2 {
--- http2/adapter/nghttp2_data_provider.h
+++ http2/adapter/nghttp2_data_provider.h
@@ -5,6 +5,10 @@
 #include <memory>

 #include "http2/adapter/data_source.h"
+
+// Required to build on Windows.
+typedef ptrdiff_t ssize_t;
+
 #include "third_party/nghttp2/src/lib/includes/nghttp2/nghttp2.h"

 namespace http2 {
--- http2/adapter/nghttp2_session.h
+++ http2/adapter/nghttp2_session.h
@@ -5,6 +5,10 @@

 #include "http2/adapter/http2_session.h"
 #include "http2/adapter/nghttp2_util.h"
+
+// Required to build on Windows.
+typedef ptrdiff_t ssize_t;
+
 #include "third_party/nghttp2/src/lib/includes/nghttp2/nghttp2.h"
 #include "common/platform/api/quiche_export.h"

--- http2/adapter/nghttp2_util.h
+++ http2/adapter/nghttp2_util.h
@@ -10,6 +10,10 @@
 #include "absl/types/span.h"
 #include "http2/adapter/data_source.h"
 #include "http2/adapter/http2_protocol.h"
+
+// Required to build on Windows.
+typedef ptrdiff_t ssize_t;
+
 #include "third_party/nghttp2/src/lib/includes/nghttp2/nghttp2.h"
 #include "spdy/core/spdy_header_block.h"

--- http2/adapter/oghttp2_session.cc
+++ http2/adapter/oghttp2_session.cc
@@ -131,6 +131,7 @@ absl::string_view TracePerspectiveAsStri
     case Perspective::kServer:
       return "OGHTTP2_SERVER";
   }
+  return "OGHTTP2_SERVER";
 }

 class RunOnExit {
@@ -186,6 +187,7 @@ Http2ErrorCode GetHttp2ErrorCode(SpdyFra
     case SpdyFramerError::LAST_ERROR:
       return Http2ErrorCode::INTERNAL_ERROR;
   }
+  return Http2ErrorCode::INTERNAL_ERROR;
 }

 }  // namespace
--- http2/adapter/http2_util.cc
+++ http2/adapter/http2_util.cc
@@ -1,5 +1,7 @@
 #include "third_party/http2/adapter/http2_util.h"

+#undef NO_ERROR
+
 namespace http2 {
 namespace adapter {
 namespace {
@@ -42,6 +44,7 @@ spdy::SpdyErrorCode TranslateErrorCode(H
     case Http2ErrorCode::HTTP_1_1_REQUIRED:
       return spdy::ERROR_CODE_HTTP_1_1_REQUIRED;
   }
+  return spdy::ERROR_CODE_INTERNAL_ERROR;
 }

 Http2ErrorCode TranslateErrorCode(spdy::SpdyErrorCode code) {
@@ -76,6 +77,7 @@ Http2ErrorCode TranslateErrorCode(spdy::
     case spdy::ERROR_CODE_HTTP_1_1_REQUIRED:
       return Http2ErrorCode::HTTP_1_1_REQUIRED;
   }
+  return Http2ErrorCode::INTERNAL_ERROR;  
 }

 absl::string_view ConnectionErrorToString(ConnectionError error) {
@@ -95,6 +96,7 @@ absl::string_view ConnectionErrorToStrin
     case ConnectionError::kInvalidPushPromise:
       return "InvalidPushPromise";
   }
+  return "UnknownConnectionError";
 }
 
 }  // namespace adapter
--- http2/adapter/oghttp2_session.cc
+++ http2/adapter/oghttp2_session.cc
@@ -11,6 +11,8 @@
 #include "http2/adapter/oghttp2_util.h"
 #include "spdy/core/spdy_protocol.h"

+#undef NO_ERROR
+
 namespace http2 {
 namespace adapter {

