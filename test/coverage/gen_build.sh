#!/bin/bash

# Generate test/coverage/BUILD, which contains a single envoy_cc_test target
# that contains all C++ based tests suitable for performing the coverage run. A
# single binary (as opposed to multiple test targets) is require to work around
# the crazy in https://github.com/bazelbuild/bazel/issues/1118.

set -e

[ -z "${BAZEL_BIN}" ] && BAZEL_BIN=bazel
[ -z "${BUILDIFIER_BIN}" ] && BUILDIFIER_BIN=buildifier

BUILD_PATH="$(dirname "$0")"/BUILD

TARGETS=$("${BAZEL_BIN}" query "attr('tags', 'coverage_test_lib', //test/...)")
(
  cat << EOF
# This file is generated by test/coverage/gen_build.sh. DO NOT EDIT. Rerun
# test/coverage/gen_build.sh when C++ test targets change to ensure coverage
# runs are kept in synch.
package(default_visibility = ["//visibility:public"])

load("//bazel:envoy_build_system.bzl", "envoy_cc_test", "envoy_cc_test_library")

envoy_cc_test(
    name = "coverage_tests",
    deps = [
EOF
  for t in ${TARGETS}
  do
    echo "        \"$t\","
  done
  cat << EOF
    ],
    tags = ["manual"],
    coverage = False,
    # Needed when invoking external shell tests etc.
    local = True,
)
EOF

) > "${BUILD_PATH}"

"${BUILDIFIER_BIN}" "${BUILD_PATH}"
