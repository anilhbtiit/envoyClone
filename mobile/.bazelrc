# Envoy Mobile Bazel build/test options.
try-import ./envoy/.bazelrc

# Common flags for all builds
build --platform_mappings=envoy/bazel/platform_mappings
build --define=google_grpc=disabled
build --define=hot_restart=disabled
build --define=tcmalloc=disabled
build --define=admin_html=disabled
build --define=library_autolink=disabled
build --experimental_inmemory_dotd_files
build --experimental_inmemory_jdeps_files
build --features=debug_prefix_map_pwd_is_dot
build --features=swift.cacheable_swiftmodules
build --features=swift.debug_prefix_map
build --host_force_python=PY3
build --macos_minimum_os=10.14
build --ios_minimum_os=12.0
build --ios_simulator_device="iPhone 13"
build --ios_simulator_version=16.0
build --verbose_failures
build --workspace_status_command=envoy/bazel/get_workspace_status
build --xcode_version=14.0
build --use_top_level_targets_for_symlinks
build --experimental_repository_downloader_retries=2
# https://github.com/bazelbuild/rules_jvm_external/issues/445
build --repo_env=JAVA_HOME=../bazel_tools/jdk
build --define disable_known_issue_asserts=true
build --define cxxopts=-std=c++17
# Unset per_object_debug_info. Causes failures on Android Linux release builds.
build --features=-per_object_debug_info
# Suppress deprecated declaration warnings due to extensive transitive noise from protobuf.
build --copt -Wno-deprecated-declarations
# Abseil Flag literals are compiled out by default on mobile platforms. These flags are needed for
# Envoy's runtime system. This option prevents them from being compiled out.
build --copt -DABSL_FLAGS_STRIP_NAMES=0

build:rules_xcodeproj --config=ios
build:rules_xcodeproj --define=apple.experimental.tree_artifact_outputs=0

# The defaults are JDK 11 on newer versions of Bazel
build --java_runtime_version=remotejdk_11
build --java_language_version=8

# Override PGV validation with NOP functions
build --@com_envoyproxy_protoc_gen_validate//bazel:template-flavor=nop

build:dbg-common --compilation_mode=dbg
# Enable source map for debugging in IDEs
build:dbg-common --copt="-fdebug-compilation-dir" --copt="/proc/self/cwd"

# Default flags for builds targeting iOS
# Manual stamping is necessary in order to get versioning information in the iOS
# static framework.
# More information on stamping can be found here:
# https://github.com/envoyproxy/envoy/tree/master/bazel#enabling-optional-features
build:ios --define=manual_stamp=manual_stamp

# Default flags for builds targeting Android
build:android --define=logger=android --define=include_ifaddrs=true

# Default flags for Android debug builds
build:dbg-android --config=dbg-common
build:dbg-android --config=android

# Default flags for iOS debug builds
build:dbg-ios --config=dbg-common
build:dbg-ios --config=ios

# Locally-runnable ASAN config for MacOS & Linux with standard dev environment
# See also:
# https://github.com/bazelbuild/bazel/issues/6932
build:asan-dev --strip=never
build:asan-dev --copt -Wno-macro-redefined # ASAN sets _FORTIFY_SOURCE=0
build:asan-dev --copt -DADDRESS_SANITIZER
build:asan-dev --copt -D_LIBCPP_HAS_NO_ASAN
build:asan-dev --copt -g
build:asan-dev --copt -fno-omit-frame-pointer
build:asan-dev --copt -fno-optimize-sibling-calls
build:asan-dev --copt -fsanitize=address
build:asan-dev --linkopt -fsanitize=address
build:asan-dev --platform_suffix=-asan

build:clang-asan --linkopt --rtlib=compiler-rt
build:clang-asan --linkopt --unwindlib=libgcc

# Locally-runnable TSAN config
build:tsan-dev --features=tsan
build:tsan-dev --copt -fsanitize=thread
build:tsan-dev --linkopt -fsanitize=thread
build:tsan-dev --test_env=ENVOY_IP_TEST_VERSIONS=v4only
build:tsan-dev --platform_suffix=-tsan
# Needed due to https://github.com/libevent/libevent/issues/777
build:tsan-dev --copt -DEVENT__DISABLE_DEBUG_MODE
# https://github.com/abseil/abseil-cpp/issues/760
# https://github.com/google/sanitizers/issues/953
build:tsan-dev --test_env="TSAN_OPTIONS=report_atomic_races=0"

# Exclude debug info from the release binary since it makes it too large to fit
# into a zip file. This shouldn't affect crash reports.
build:release-common --define=no_debug_info=1

# Compile releases optimizing for size (eg -Os, etc).
build:release-common --config=sizeopt

# Set default symbols visibility to hidden to reduce .dynstr and the symbol table size
build:release-common --copt=-fvisibility=hidden

# Flags for release builds targeting iOS
build:release-ios --config=ios
build:release-ios --config=release-common
build:release-ios --compilation_mode=opt

# Flags for release builds targeting Android or the JVM
# Release does not use the option --define=logger=android
build:release-android --define=include_ifaddrs=true
build:release-android --config=release-common
build:release-android --compilation_mode=opt

# Instrument Envoy Mobile's C++ code for coverage
build:coverage --instrumentation_filter="//library/common[/:]"


