syntax = "proto3";

package envoy.extensions.filters.http.mutation.v3alpha;

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.http.mutation.v3alpha";
option java_outer_classname = "ProcessingModeProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).work_in_progress = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Mutation Service]
// Mutation Service Processing Mode
// [#extension: envoy.filters.http.mutation]

// This configuration describes how a mutation filter processes the HTTP
// request or response -- specifically, whether it is done synchronously
// or asynchronously.

message ProcessingMode {
  enum Mode {
    // In the default "sync" mode, a message is sent to the filter server
    // as soon as decodeHeaders is called, and the filter waits for a response
    // from the server before continuing.
    SYNC = 0;

    // In "async" mode, messages are sent to the filter server and the filter
    // does not wait for a response. By default the request and response headers,
    // all body chunks, and trailers are sent. An AsyncParams object can be used
    // to customize this behavior.
    ASYNC = 1;
  }

  Mode mode = 1;

  // The optional AsyncParams object controls how data is delivered
  // to the server in ASYNC mode. It is ignored in SYNC mode.
  // If this is not set, then in ASYNC mode the filter behaves as if
  // all flags on AsyncParameters are "true."
  AsyncParams params = 2;
}

// [#next-free-field: 7]
message AsyncParams {
  // If true, send request headers asynchronously
  bool request_headers = 1;

  // If true, send request body chunks asynchronously
  bool request_body_chunks = 2;

  // If true, send request trailers asynchronously
  bool request_trailers = 3;

  // If true, send response headers asynchronously
  bool response_headers = 4;

  // If true, send response body chunks asynchronously
  bool response_body_chunks = 5;

  // If true, send response trailers asynchronously
  bool response_trailers = 6;
}
