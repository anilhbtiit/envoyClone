syntax = "proto3";

package test.common.upstream;

import "validate/validate.proto";
import "envoy/config/cluster/v3/cluster.proto";
import "google/protobuf/empty.proto";

message UpdateHealthFlags {
  bool failover_host_set = 1;
  uint32 num_healthy_hosts = 2;
  uint32 num_degraded_hosts = 3;
  uint32 num_excluded_hosts = 4;
}

//Left as message in case specific load balancers need something generated for these actions
message ChooseHost {
}

message Prefetch {
}

message LbAction {
  oneof action_selector {
    option (validate.required) = true;
    UpdateHealthFlags update_health_flags = 1;
    Prefetch prefetch = 2;
    ChooseHost choose_host = 3;
  }
}

message LoadBalancerTestCase {
  envoy.config.cluster.v3.Cluster.CommonLbConfig common_lb_config = 1
      [(validate.rules).message.required = true];
  repeated LbAction actions = 2;
  //This is capped at the max port value on an ip address - 80
  int64 num_hosts_in_priority_set = 3 [(validate.rules).int64.lt = 65455];
  int64 num_hosts_in_failover_set = 4 [(validate.rules).int64.lt = 65455];
  repeated int64 bytestring_for_random_calls = 5
      [(validate.rules).repeated = {min_items: 1, max_items: 50}];
}
