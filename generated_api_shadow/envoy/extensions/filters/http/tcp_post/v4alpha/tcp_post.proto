syntax = "proto3";

package envoy.extensions.filters.http.tcp_post.v4alpha;

import "envoy/config/route/v4alpha/route_components.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.http.tcp_post.v4alpha";
option java_outer_classname = "TcpPostProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = NEXT_MAJOR_VERSION_CANDIDATE;

// [#protodoc-title: TCP Post]
// TCP Post :ref:`configuration overview <config_http_filters_tcp_post>`.
// [#extension: envoy.filters.http.tcp_post]

// Configuration for TcpPost filter.
message TcpPost {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.extensions.filters.http.tcp_post.v3.TcpPost";

  // Specifies a set of request headers to trigger converting POST requests
  // to CONNECT and set ``protocol: bytestream`` header.
  //
  // This is mainly used by the upstream proxy to coordinate with the downstream
  // proxy that uses HTTP POST for TCP proxying.
  repeated config.route.v4alpha.HeaderMatcher headers = 1;
}
