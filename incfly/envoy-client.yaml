---
node:
  id: 'a2'
  cluster: 'd2'
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filter_chain_match:
        # empty
      filters:
      - config:
          codec_type: auto
          http_filters:
          - config: {}
            name: envoy.router
          route_config:
            name: local_route
            virtual_hosts:
            - domains:
              - "*"
              name: service
              routes:
              - match:
                  prefix: "/"
                route: { cluster: mtls_by_label }
          stat_prefix: mtls_by_label
        name: envoy.http_connection_manager
  clusters:
  - connect_timeout: 0.25s
    name: mtls_by_label
    type: eds
    eds_cluster_config:
      eds_config: { path: "./incfly/eds.yaml" }
    transport_socket_matches:
    - name: "mtlsReady"
      match: { "istio": "mtlsReady" }
      transport_socket:
        name: "tls"
        # TODO(incfly): support other sockets.
        # tls socket uses `struct` config other sockets may use `typed socket` need more impl.
        config:
          common_tls_context:
            tls_certificates:
            - certificate_chain: { filename: "./test/config/integration/certs/clientcert.pem" }
              private_key: { filename: "./test/config/integration/certs/clientkey.pem" }
    - name: "defaultToPlaintext"
      match: {} # hardcoded, change to metadata later.
      transport_socket:
        name: "raw_buffer"
        config: {} # raw buffer does not need any config.

    #transport_socket_matchers:
      #match: mtlsReady
      #tls_context:
        #common_tls_context:
          #tls_certificates:
            #- certificate_chain: { filename: "./test/config/integration/certs/clientcert.pem" }
              #private_key: { filename: "./test/config/integration/certs/clientkey.pem" }

