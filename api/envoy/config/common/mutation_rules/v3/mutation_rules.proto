syntax = "proto3";

package envoy.config.common.mutation_rules.v3;

import "envoy/type/matcher/v3/regex.proto";

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.config.common.mutation_rules.v3";
option java_outer_classname = "MutationRulesProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/config/common/mutation_rules/v3;mutation_rulesv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// The HeaderMutationRules structure specifies what headers may be
// manipulated by a processing filter. This set of rules rule makes it
// possible to control which modifications a filter may make according
// to rules here.
//
// By default, an external processing server may add, modify, or remove
// any header except for an "Envoy internal" header (which is typically
// denoted by an x-envoy prefix) or specific headers that may affect
// further filter processing:
//
// * host
// * :authority
// * :scheme
// * :method
//
// Every attempt to add, change, append, or remove a header will be
// tested against the rules here. Disallowed header mutations will be
// ignored unless "disallow_is_error" is set to true.
//
// In addition, a counter will be incremented whenever a mutation is
// rejected. In the ext_proc filter, that counter is named
// "rejected_header_mutations".
// [#next-free-field: 8]
message HeaderMutationRules {
  // If true, allow modification of headers that could affect processing
  // of subsequent filters or request routing. This includes "host",
  // ":authority", ":scheme", and ":method". Default is false.
  google.protobuf.BoolValue allow_routing = 1;

  // If true, allow modification of envoy internal headers. By default, these
  // start with "x-envoy" but this prefix may be overridden elsewhere
  // in the configuration. Default is false.
  google.protobuf.BoolValue allow_envoy = 2;

  // If true, prevent modification of any system header, defined as a header
  // that starts with a ":" character, regardless of any other settings.
  // A processing server may still override the ":status" of an HTTP response
  // using an "ImmediateResponse" message. Default is false.
  google.protobuf.BoolValue disallow_system = 3;

  // If true, prevent modifications of all header values, regardless of any
  // other settings. A processing server may still override the ":status"
  // of an HTTP response using an "ImmediateResponse" message. Default is false.
  google.protobuf.BoolValue disallow_all = 4;

  // If set, specifically allow any header that matches this regular
  // expression. This overrides all other settings except for
  // "disallow_expression".
  type.matcher.v3.RegexMatcher allow_expression = 5;

  // If set, specifically disallow any header that matches this regular
  // expression regardless of any other settings.
  type.matcher.v3.RegexMatcher disallow_expression = 6;

  // If the rules in this list cause a header mutation to be disallowed,
  // which will cause the filter using this configuration to terminate the
  // request with a 500 error. If false, which is the default, then any
  // attempt to set, add, or modify a disallowed header will cause the
  // "rejected_header_mutations" counter to be incremented.
  google.protobuf.BoolValue disallow_is_error = 7;
}
