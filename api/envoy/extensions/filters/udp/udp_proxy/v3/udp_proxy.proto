syntax = "proto3";

package envoy.extensions.filters.udp.udp_proxy.v3;

import "google/protobuf/duration.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.udp.udp_proxy.v3";
option java_outer_classname = "UdpProxyProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: UDP proxy]
// UDP proxy :ref:`configuration overview <config_udp_listener_filters_udp_proxy>`.
// [#extension: envoy.filters.udp_listener.udp_proxy]

// Configuration for the UDP proxy filter.
message UdpProxyConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.udp.udp_proxy.v2alpha.UdpProxyConfig";

  // The stat prefix used when emitting UDP proxy filter stats.
  string stat_prefix = 1 [(validate.rules).string = {min_bytes: 1}];

  oneof route_specifier {
    option (validate.required) = true;

    // The upstream cluster to connect to.
    string cluster = 2 [(validate.rules).string = {min_bytes: 1}];
  }

  // The idle timeout for sessions. Idle is defined as no datagrams between received or sent by
  // the session. The default if not specified is 1 minute.
  google.protobuf.Duration idle_timeout = 3;

  // Use the remote downstream ip address as sender ip address when send packets to upstreams.
  // This option requires Envoy to run with the *CAP_NET_ADMIN* capability.
  // This option does not preserve the remote downstream port.
  // If this option is enabled, the sender ip address will be changed to remote downstream ip address.
  // It means that the envoy cannot receive the packets that be sent by upstreams because the upstreams
  // will send the packets with remote downstream ip address. So, basically, all packets will be routed
  // to the remote downstream directly if there are route rules on the upstreams side.
  // There are two options the return back to remote downstream.
  // The one is that use the DSR(Direct Server Return).
  // The another one is that configure the default gw or add routing rules on the upstreams to forward
  // all packets to envoy. And configure iptables rules and add some routing rules on the host of envoy side to
  // forward all packets from upstreams to envoy process so that the envoy can return back the packets to the downstream.
  bool use_original_src_ip = 4;
}
