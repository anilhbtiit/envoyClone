name: CIFuzz
on:
  pull_request:
    branches:
      - main
    paths:
      - '**.c'
      - '**.cc'
      - '**.cpp'
      - '**.cxx'
      - '**.h'
jobs:
 Fuzzing:
   runs-on: ubuntu-latest
   strategy:
     fail-fast: false
     matrix:
       sanitizer: [address]
   steps:
   - name: Testing secret access
     env:
       CFL_EXTRA_BAZEL_TOKEN: ${{secrets.GCP_RBE_TOKEN}}
     run: echo "token is $CFL_EXTRA_BAZEL_TOKEN"
   - name: Build Fuzzers (${{ matrix.sanitizer }})
     id: build
     uses: krajshiva/oss-fuzz/infra/cifuzz/actions/build_fuzzers@cifuzz-rbe-integration
     env:
       TEST_NON_CFL: abc
       CFL_EXTRA_BAZEL_BUILD_OPTIONS: "--config=remote-ci --flaky_test_attempts=2"
       CFL_EXTRA_REMOTE_CACHE: grpcs://remotebuildexecution.googleapis.com
       CFL_EXTRA_BAZEL_REMOTE_INSTANCE: projects/envoy-ci/instances/default_instance
       CFL_EXTRA_BAZEL_TOKEN: ${{secrets.GCP_RBE_TOKEN}}
     with:
       oss-fuzz-project-name: 'envoy'
       language: c++
       sanitizer: ${{ matrix.sanitizer }}
   - name: Run Fuzzers (${{ matrix.sanitizer }})
     uses: krajshiva/oss-fuzz/infra/cifuzz/actions/run_fuzzers@cifuzz-rbe-integration
     with:
       oss-fuzz-project-name: 'envoy'
       language: c++
       fuzz-seconds: 600
       sanitizer: ${{ matrix.sanitizer }}
   - name: Upload Crash
     uses: actions/upload-artifact@v1
     if: failure() && steps.build.outcome == 'success'
     with:
       name: ${{ matrix.sanitizer }}-artifacts
       path: ./out/artifacts
