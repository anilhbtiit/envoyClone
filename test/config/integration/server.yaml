static_resources:
  listeners:
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          access_log:
          - name: envoy.file_access_log
            filter:
              or_filter:
                filters:
                  - status_code_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 400
                          runtime_key: access_log.access_error.status
                  - duration_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 1000000
                          runtime_key: access_log.access_error.duration
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: /dev/null
          codec_type: http1
          drain_timeout: 5s
          http_filters:
          - name: envoy.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
              headers:
              - exact_match: /healthcheck
                name: :path
              pass_through_mode: false
          - name: envoy.rate_limit
            config:
              domain: foo
              rate_limit_service:
                grpc_service:
                  envoy_grpc:
                    cluster_name: ratelimit 
          - name: envoy.router
            typed_config: {}          
          route_config:
            virtual_hosts:
            - domains:
              - www.redirect.com
              name: redirect
              require_tls: all
              routes:
              - match:
                  prefix: /
                  runtime_fraction:
                    default_value:
                      numerator: 0
                      denominator: HUNDRED
                    runtime_key: some_key
                route:
                  cluster: cluster_1
            - domains:
              - "*"
              name: integration
              routes:
              - match:
                  prefix: /
                route:
                  cluster: cluster_1
              - match:
                  prefix: /test/long/url
                route:
                  cluster: cluster_1
                  rate_limits:
                  - actions:
                      - destination_cluster: {}
              - match:
                  prefix: /test/
                route:
                  cluster: cluster_2
              - match:
                  prefix: /websocket/test
                route:
                  prefix_rewrite: /websocket
                  cluster: cluster_1
          stat_prefix: router
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          access_log:
          - name: envoy.file_access_log          
            filter:
              or_filter:
                filters:
                  - status_code_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 500
                          runtime_key: access_log.access_error.status
                  - duration_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 1555500
                          runtime_key: access_log.access_error.duration
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: /dev/null
          codec_type: http1
          drain_timeout: 5s
          http_filters:
          - name: envoy.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
              headers:
              - exact_match: /healthcheck
                name: :path
              pass_through_mode: false
          - name: envoy.rate_limit
            config:
              domain: foo
              rate_limit_service:
                grpc_service:
                  envoy_grpc:
                    cluster_name: ratelimit 
          - name: envoy.router
            typed_config: {}
          route_config:
            virtual_hosts:
            - domains:
              - www.redirect.com
              name: redirect
              require_tls: all
              routes:
              - match:
                  prefix: /
                route:
                  cluster: cluster_1
            - domains:
              - www.namewithport.com:1234
              name: redirect
              require_tls: all
              routes:
              - match:
                  prefix: /
                  runtime_fraction:
                    default_value:
                      numerator: 0
                      denominator: HUNDRED
                    runtime_key: some_key
                route:
                  cluster: cluster_1
                  rate_limits:
                  - actions:
                    - destination_cluster: {}
              - match:
                  prefix: /test/long/url
                route:
                  cluster: cluster_1
              - match:
                  prefix: /test/
                route:
                  cluster: cluster_2
              - match:
                  prefix: /websocket/test
                route:
                  cluster: cluster_1
                  prefix_rewrite: /websocket
            - domains:
              - "*"
              name: integration
          http_protocol_options:
            allow_absolute_url: true
          stat_prefix: router
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: http1
          http_filters:
          - name: envoy.router
            typed_config: {}
          route_config:
            virtual_hosts:
            - domains:
              - "*"
              name: integration
              routes:
              - match:
                  prefix: /test/long/url
                route:
                  cluster: cluster_3
          stat_prefix: router
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: http1
          http_filters:
          - name: envoy.http_dynamo_filter
            typed_config: {}
          - name: envoy.router
            typed_config: {}
          route_config:
            virtual_hosts:
            - domains:
              - "*"
              name: integration
              routes:
              - match:
                  prefix: /dynamo/url
                route:
                  cluster: cluster_3
          stat_prefix: router
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: http1
          http_filters:
          - name: envoy.grpc_http1_bridge
            typed_config: {}
          - name: envoy.router
            typed_config: {}
          route_config:
            virtual_hosts:
            - domains:
              - "*"
              name: integration
              routes:
              - match:
                  prefix: /test/long/url
                route:
                  cluster: cluster_3
          stat_prefix: router
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          access_log:
          - name: envoy.file_access_log
            filter:
              or_filter:
                filters:
                  - status_code_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 500
                          runtime_key: access_log.access_error.status
                  - duration_filter:
                      comparison:
                        op: GE
                        value:
                          default_value: 1555500
                          runtime_key: access_log.access_error.duration
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: /dev/null
          codec_type: http1
          drain_timeout: 5s
          http_filters:
          - name: envoy.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
              headers:
              - exact_match: /healthcheck
                name: :path
              pass_through_mode: false
          - name: envoy.rate_limit
            config:
              domain: foo
              rate_limit_service:
                grpc_service:
                  envoy_grpc:
                    cluster_name: ratelimit 
          - name: envoy.buffer
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.buffer.v2.Buffer
              max_request_bytes: 5242880
          - name: envoy.router
            typed_config: {}
          route_config:
            virtual_hosts:
            - domains:
              - www.redirect.com
              name: redirect
              require_tls: all
              routes:
              - match:
                  prefix: /
                route:
                  cluster: cluster_1
            - domains:
              - "*"
              name: integration
              routes:
              - match:
                  prefix: /
                  runtime_fraction:
                    default_value:
                      numerator: 0
                      denominator: HUNDRED
                    runtime_key: some_key
                route:
                  cluster: cluster_1
              - match:
                  prefix: /test/long/url
                route:
                  cluster: cluster_1
                  rate_limits:
                  - actions:
                    - destination_cluster: {}
              - match:
                  prefix: /test/
                route:
                  cluster: cluster_2
              - match:
                  prefix: /websocket/test
                route:
                  cluster: cluster_1
                  prefix_rewrite: /websocket
          stat_prefix: router
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: http1
          http_filters:
          - name: envoy.router
            typed_config: {}
          rds:
            config_source:
              api_config_source:
                api_type: REST
                cluster_names:
                - rds
                refresh_delay: 5s          
            route_config_name: foo
          stat_prefix: rds_dummy
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.redis_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.redis_proxy.v2.RedisProxy
          cluster: redis
          settings:
            op_timeout: 0.4s
          stat_prefix: redis
  clusters:
  - name: cds
    connect_timeout: 5s
    load_assignment:
      cluster_name: cds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ ip_loopback_address }}
                port_value: 4
    dns_lookup_family: {{ dns_lookup_family }}
  - name: rds
    connect_timeout: 5s
    load_assignment:
      cluster_name: rds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ ip_loopback_address }}
                port_value: 4
    dns_lookup_family: {{ dns_lookup_family }}
  - name: lds
    connect_timeout: 5s
    load_assignment:
      cluster_name: lds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ ip_loopback_address }}
                port_value: 4
    dns_lookup_family: {{ dns_lookup_family }}
  - name: cluster_1
    connect_timeout: 5s
    load_assignment:
      cluster_name: cluster_1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ ip_loopback_address }}
                port_value: {{ upstream_0 }}
    dns_lookup_family: {{ dns_lookup_family }}
  - name: cluster_2
    type: STRICT_DNS
    connect_timeout: 5s
    load_assignment:
      cluster_name: cluster_2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: localhost
                port_value: {{ upstream_1 }}
    dns_lookup_family: {{ dns_lookup_family }}
  - name: cluster_3
    connect_timeout: 5s
    per_connection_buffer_limit_bytes: 1024
    load_assignment:
      cluster_name: cluster_3
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ ip_loopback_address }}
                port_value: {{ upstream_0 }}
    dns_lookup_family: {{ dns_lookup_family }}
  - name: statsd
    type: STRICT_DNS
    connect_timeout: 5s
    load_assignment:
      cluster_name: statsd
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: localhost
                port_value: 4
    dns_lookup_family: {{ dns_lookup_family }}
  - name: redis
    type: STRICT_DNS
    connect_timeout: 5s
    lb_policy: RING_HASH
    load_assignment:
      cluster_name: redis
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: localhost
                port_value: 4
    dns_lookup_family: {{ dns_lookup_family }}
    outlier_detection: {}
dynamic_resources:
  lds_config:
    api_config_source:
      api_type: REST
      cluster_names:
      - lds
      refresh_delay: 30s
  cds_config:
    api_config_source:
      api_type: REST
      cluster_names:
      - cds
      refresh_delay: 30s
cluster_manager: {}
flags_path: /invalid_flags
stats_sinks:
- name: envoy.statsd
  typed_config:
    "@type": type.googleapis.com/envoy.config.metrics.v2.StatsdSink
    address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 8125
- name: envoy.statsd
  typed_config:
    "@type": type.googleapis.com/envoy.config.metrics.v2.StatsdSink
    tcp_cluster_name: statsd
watchdog: {}
runtime:
  symlink_root: {{ test_rundir }}/test/common/runtime/test_data/current
  subdirectory: envoy
  override_subdirectory: envoy_override
admin:
  access_log_path: /dev/null
  profile_path: {{ test_tmpdir }}/envoy.prof
  address:
    socket_address:
      address: {{ ip_loopback_address }}
      port_value: 0
