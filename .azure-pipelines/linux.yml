jobs:
- job: bazel
  strategy:
    matrix:
      release:
        CI_TARGET: 'bazel.release'
      asan:
        CI_TARGET: 'bazel.asan'
      tsan:
        CI_TARGET: 'bazel.tsan'
      coverage:
        CI_TARGET: 'bazel.coverage'
      api:
        CI_TARGET: 'bazel.api'
      gcc:
        CI_TARGET: 'bazel.gcc'
      compile_time_options:
        CI_TARGET: 'bazel.compile_time_options'
  dependsOn: [] # this removes the implicit dependency on previous stage and causes this to run in parallel.
  timeoutInMinutes: 360
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - bash: |
      echo "disk space at beginning of build:"
      df -h
    displayName: "Check disk space at beginning"

  - bash: |
      sudo mkdir -p /etc/docker
      echo '{
        "ipv6": true,
        "fixed-cidr-v6": "2001:db8:1::/64"
      }' | sudo tee /etc/docker/daemon.json
      sudo service docker restart
    displayName: "Enable IPv6"

  - script: ci/run_envoy_docker.sh 'ci/do_rbe_ci.sh $(CI_TARGET)'
    workingDirectory: $(Build.SourcesDirectory)
    env:
      ENVOY_DOCKER_BUILD_DIR: $(Build.StagingDirectory)
      BAZEL_BUILD_EXTRA_OPTIONS: "--config=remote-ci --jobs=100 --curses=no"
      BAZEL_REMOTE_CACHE: grpcs://remotebuildexecution.googleapis.com
      BAZEL_REMOTE_INSTANCE: projects/envoy-ci/instances/default_instance
      GCP_SERVICE_ACCOUNT_KEY: $(GcpServiceAccountKey)
    displayName: "Run CI script"

  - bash: |
      echo "disk space at end of build:"
      df -h
    displayName: "Check disk space at end"
    condition: always()

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.StagingDirectory)/envoy"
      artifactName: $(CI_TARGET)
      parallel: true

- job: format
  dependsOn: [] # this removes the implicit dependency on previous stage and causes this to run in parallel.
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: |
      ci/run_envoy_docker.sh '
        set -e
        ci/do_ci.sh check_format
        ci/do_ci.sh check_repositories
        ci/do_ci.sh check_spelling
        ci/do_ci.sh check_spelling_pedantic
      '
    workingDirectory: $(Build.SourcesDirectory)
    env:
      ENVOY_DOCKER_BUILD_DIR: $(Build.StagingDirectory)
    displayName: "Run CI script"

- job: docs
  dependsOn: [] # this removes the implicit dependency on previous stage and causes this to run in parallel.
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: |
      ci/run_envoy_docker.sh '
        set -e
        ci/do_ci.sh docs
      '
    workingDirectory: $(Build.SourcesDirectory)
    env:
      ENVOY_DOCKER_BUILD_DIR: $(Build.StagingDirectory)
    displayName: "Run CI script"

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.SourcesDirectory)/generated/docs"
      artifactName: docs
      parallel: true
