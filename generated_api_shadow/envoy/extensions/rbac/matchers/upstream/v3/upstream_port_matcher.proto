syntax = "proto3";

package envoy.extensions.rbac.matchers.upstream.v3;

import "envoy/type/range.proto";

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.rbac.matchers.upstream.v3";
option java_outer_classname = "UpstreamPortMatcherProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: RBAC upstream port range matcher plugin]
// [#extension: envoy.rbac.matchers.upstream]
// [#alpha:]
// This is configuration for matching upstream port.
message UpstreamPortMatcher {
  // A Port range that will be used to match the upstream port.
  // This matcher requires a filter in the chain to have saved the upstream address in the the
  // filter state before the matcher is executed by RBAC filter. Otherwise the matcher will
  // evaluate to `false`.
  type.Int64Range port_range = 1;
}
