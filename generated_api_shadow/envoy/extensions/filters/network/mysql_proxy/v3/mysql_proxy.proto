syntax = "proto3";

package envoy.extensions.filters.network.mysql_proxy.v3;

import "envoy/config/core/v3/base.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/sensitive.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.mysql_proxy.v3";
option java_outer_classname = "MysqlProxyProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: MySQL proxy]
// MySQL Proxy :ref:`configuration overview <config_network_filters_mysql_proxy>`.
// [#extension: envoy.filters.network.mysql_proxy]

// [#next-free-field: 6]
message MySQLProxy {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.network.mysql_proxy.v1alpha1.MySQLProxy";

  message Route {
    // String database name that must exact match with client connection db name
    string database = 1;

    // Upstream cluster to forward the command to.
    string cluster = 2;
  }

  // The human readable prefix to use when emitting :ref:`statistics
  // <config_network_filters_mysql_proxy_stats>`.
  string stat_prefix = 1 [(validate.rules).string = {min_len: 1}];

  // [#not-implemented-hide:] The optional path to use for writing MySQL access logs.
  // If the access log field is empty, access logs will not be written.
  string access_log = 2;

  repeated Route routes = 3;

  config.core.v3.DataSource downstream_auth_username = 4 [(udpa.annotations.sensitive) = true];

  config.core.v3.DataSource downstream_auth_password = 5 [(udpa.annotations.sensitive) = true];
}

message MySQLProtocolOptions {
  config.core.v3.DataSource auth_password = 1 [(udpa.annotations.sensitive) = true];

  config.core.v3.DataSource auth_username = 2 [(udpa.annotations.sensitive) = true];
}
