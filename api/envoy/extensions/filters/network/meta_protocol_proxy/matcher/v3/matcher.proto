syntax = "proto3";

package envoy.extensions.filters.network.meta_protocol_proxy.matcher.v3;

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.meta_protocol_proxy.matcher.v3";
option java_outer_classname = "MatcherProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;
option (udpa.annotations.file_status).work_in_progress = true;

// [#protodoc-title: Meta Protocol Proxy Route Matcher Configuration]

// Used to match request service of the downstream request. Only relevant when the application
// protocol is RPC such as Dubbo or Thrift.
// [#not-implemented-hide:]
message ServiceMatchInput {
}

// Used to match request method of the downstream request. Only relevant when the application
// protocol is RPC such as Dubbo or Thrift.
// [#not-implemented-hide:]
message MethodMatchInput {
}

// Used to match an arbitrary property of the downstream request.
// These properties are populated by the codecs of application protocols.
// [#not-implemented-hide:]
message PropertyMatchInput {
  // The property name to match on.
  string property_name = 1;
}
