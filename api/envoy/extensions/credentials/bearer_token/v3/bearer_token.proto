syntax = "proto3";

package envoy.extensions.credentials.bearer_token.v3;

import "envoy/extensions/transport_sockets/tls/v3/secret.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.credentials.bearer_token.v3";
option java_outer_classname = "BearerTokenProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/credentials/bearer_token/v3;bearer_tokenv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: HTTP Bearer Token Credential]
// [#not-implemented-hide:]
// [#extension: envoy.credentials.bearer_token]

// Bearer Token Credential to inject into the proxied requests.
//
// Refer to [RFC 6750: The OAuth 2.0 Authorization Framework: Bearer Token Usage](https://www.rfc-editor.org/rfc/rfc6750) for details.
//
message BearerToken {
  // The SDS configuration for the bearer token that will be injected into the "Authorization" header.
  transport_sockets.tls.v3.SdsSecretConfig bearer_token = 1
      [(validate.rules).message = {required: true}];
}
