date: Pending

behavior_changes:
# *Changes that are expected to cause an incompatibility if applicable; deployment changes are likely required*

minor_behavior_changes:
# *Changes that may cause incompatibilities for some users, but should not for most*
- area: ext_authz
  change: |
    Removing any query parameter in the presence of repeated query parameter keys no longer drops the repeats.
- area: alternate_protocols_cache_filter
  change: |
    Changed the alternate protocols cache filter to get the cache from cluster config rather than filter config.
    This allows one downstream filter to be used with multiple clusters with different caches. This change can be reverted by
    setting runtime guard ``envoy.reloadable_features.use_cluster_cache_for_alt_protocols_filter`` to ``false``.
- area: ext_authz
  change: |
    Don't append the local address to ``x-forwarded-for`` header when sending an http (not gRPC) auth request.
    This behavior can be reverted by setting runtime flag
    ``envoy.reloadable_features.ext_authz_http_send_original_xff`` to ``false``.
- area: ext_proc
  change: |
    Envoy will only take
    :ref:`mode_override <envoy_v3_api_field_service.ext_proc.v3.ProcessingResponse.mode_override>`
    when waiting for the header responses. It will be ignored if it is in other processing states.
- area: outlier detection
  change: |
    Outlier detection will always respect ``max_ejection_percent`` now.
    This behavioral change can be reverted by setting runtime guard
    ``envoy.reloadable_features.check_mep_on_first_eject`` to ``false``.
- area: outlier detection
  change: |
    A node must stay in healthy state for at least one period of
    :ref:`check interval <envoy_v3_api_field_config.cluster.v3.OutlierDetection.interval>` before ejection time multiplier is decremented.
- area: quic
  change: |
    Enable QUICHE request and response headers validation. This behavior can be reverted by setting runtime flag
    ``envoy.reloadable_features.FLAGS_envoy_quic_reloadable_flag_quic_act_upon_invalid_header`` to ``false``.
- area: http oauth2 filter
  change: |
    Change HMAC cookie encoding to base64-encoded only. This change can be reverted temporarily by
    setting the runtime guard ``envoy.reloadable_features.hmac_base64_encoding_only`` to ``false``.
- area: router
  change: |
    Enable copying response_code from the upstream stream_info onto the downstream stream_info.
    This behavior can be reverted by setting runtime guard
    ``envoy.reloadable_features.copy_response_code_to_downstream_stream_info`` to ``false``.
- area: xds
  change: |
    Set the lower bound of :ref:`fill_rate <envoy_v3_api_field_config.core.v3.RateLimitSettings.fill_rate>`
    to once per year. Values lower than once per year will automatically be set to that value.
- area: redis
  change: |
    The redis network filter :ref:`connection_rate_limit_per_sec
    <envoy_v3_api_field_extensions.filters.network.redis_proxy.v3.RedisProxy.ConnectionRateLimit.connection_rate_limit_per_sec>`
    must be greater than 0. A config that sets this value to 0 will be rejected.
- area: upstream
  change: |
    Deprecate code path of legacy upstream load balancer. Ideally, this is implementation detail changes and should not
    affect users. However, if there is any user who encounters issues, this behavior can be reverted by setting runtime flag
    ``envoy_reloadable_features_convert_legacy_lb_config`` to false.
- area: http
  change: |
    Change the proxy status for ``UpstreamRequestTimeout`` to ``HttpResponseTimeout``.
    It can be disabled by the runtime guard ``envoy.reloadable_features.proxy_status_upstream_request_timeout``.
- area: local_rate_limit
  change: |
    Added new configuration field :ref:`always_consume_default_token_bucket
    <envoy_v3_api_field_extensions.filters.http.local_ratelimit.v3.LocalRateLimit.always_consume_default_token_bucket>`
    to allow for setting if default token bucket should be always consumed or only be consumed when there is no matching descriptor.
- area: tls_inspector
  change: |
    Updated the security posture of the :ref:`TLS inspector listener filter <config_listener_filters_tls_inspector>` to
    robust against untrusted downstreams and upstreams.
- area: router
  change: |
    Enable environment_variable in router direct response.
- area: tracing
  change: |
    Added filter invocking local replay in filter state as <envoy.filters.listener.local_replay_owner>.

bug_fixes:
# *Changes expected to improve the state of the world and are unlikely to have negative effects*
- area: xds
  change: |
    Fixed a bug (https://github.com/envoyproxy/envoy/issues/27702) that caused ADS initialization
    to fail on the first attempt and set a back-off retry interval of up to 1 second, if ADS is
    using an Envoy Cluster for the backend. The issue was fixed to ensure that ADS initialization
    happens after the Envoy Cluster it depends upon has been properly initialized. ADS that does
    not depend on an Envoy Cluster (i.e. GoogleGrpc) is not affected by this change.
- area: grpc
  change: |
    Fixed a bug in gRPC async client cache which intermittently causes CPU spikes due to busy loop in timer expiration.

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`

new_features:

deprecated:
