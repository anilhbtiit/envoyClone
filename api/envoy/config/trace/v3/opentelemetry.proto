syntax = "proto3";

package envoy.config.trace.v3;

import "envoy/config/core/v3/grpc_service.proto";
import "envoy/config/core/v3/http_uri.proto";

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.config.trace.v3";
option java_outer_classname = "OpentelemetryProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/config/trace/v3;tracev3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: OpenTelemetry tracer]

// Configuration for the OpenTelemetry tracer.
//  [#extension: envoy.tracers.opentelemetry]
message OpenTelemetryConfig {
  // The upstream gRPC cluster that will receive OTLP traces.
  // Note that the tracer drops traces if the server does not read data fast enough.
  // This field can be left empty to disable reporting traces to the collector.
  core.v3.GrpcService grpc_service = 1;

  // The name for the service. This will be populated in the ResourceSpan Resource attributes.
  // If it is not provided, it will default to "unknown_service:envoy".
  string service_name = 2;

  // Configuration for sending traces to the collector over HTTP. Note that
  // this will only be used if the grpc_service is not set above.
  message HttpConfig {
    // The upstream cluster that will receive OTLP traces over HTTP.
    config.core.v3.HttpUri http_uri = 1;

    enum HttpFormat {
      // Binary Protobuf Encoding.
      BINARY_PROTOBUF = 0;

      // JSON Protobuf Encoding.
      JSON_PROTOBUF = 1;
    }

    // OTLP/HTTP uses Protobuf payloads encoded either in binary format or in JSON format.
    // See https://opentelemetry.io/docs/specs/otlp/#otlphttp.
    HttpFormat http_format = 2;

    // Optional path. If omitted, the default path of "/v1/traces" will be used.
    string collector_path = 3;

    // Hostname to include with the request to the collector in the Host header.
    string collector_hostname = 4;
  }

  // This field can be also left empty to disable reporting traces to the collector.
  HttpConfig http_config = 3;
}
