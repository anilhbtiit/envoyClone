{%- macro make_route_internal(cluster, options) -%}  
  {%- if 'timeout' in options -%}
  timeout: {{ options['timeout'] }},
  {%- endif -%}
  retry_policy:
    retry_on: {{ options.get('retry_on', 'connect-failure') }}
  cluster: {{ cluster }}
{%- endmacro -%}
{%- macro make_route(cluster) -%}
  {{ make_route_internal(cluster, clusters.get(cluster, {})) }}
{%- endmacro -%}
{%- macro internal_cluster_definition(service, options) -%}
  name: {{ service }}
  connect_timeout: 0.250s
  type: SDS
  lb_type: LEAST_REQUEST
  #need to mention http2
  eds_cluster_config:
    service_name: {{ service }}
  {% if 'max_requests' in options -%}
  circuit_breakers:
    thresholds:
      - priority: DEFAULT
        max_requests: {{ options['max_requests'] }}
  {% endif -%}
  health_checks:
    type: http
    timeout: 2s
    interval: 5s
    interval_jitter: 5000
    unhealthy_threshold: 2
    healthy_threshold: 2
    http_health_check:
      path: /healthcheck
      service_name: {{ service }}
  outlier_detection:
    success_rate_stdev_factor: 1900
{%- endmacro -%}