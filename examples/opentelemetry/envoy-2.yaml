# This proxy listens on port 10000 and routes all queries to `service-2`.

static_resources:
  clusters:
  - name: service_cluster2
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_cluster2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service-2
                port_value: 8080
  - name: &otel_cluster_name opentelemetry_collector
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: opentelemetry_collector
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: opentelemetry
                port_value: 4317
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    traffic_direction: INBOUND
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          tracing:
            provider:
              name: envoy.tracers.opentelemetry
              typed_config:
                "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
                grpc_service:
                  envoy_grpc:
                    cluster_name: *otel_cluster_name
                  timeout: 0.250s
                service_name: &service_name envoy-2
          access_log:
          - name: envoy.access_loggers.open_telemetry
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig
              common_config:
                log_name: "otel_envoy_accesslog"
                transport_api_version: V3
                grpc_service:
                  envoy_grpc:
                    cluster_name: *otel_cluster_name
                  timeout: 0.250s
              resource_attributes:
                values:
                - key: "service.name"
                  value:
                    string_value: *service_name # Should match `service_name` in tracing section
              body:
                string_value: "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
              attributes:
                values:
                - key: "url.path"
                  value:
                    string_value: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                - key: "http.request.method"
                  value:
                    string_value: "%REQ(:METHOD)%"
                - key: "http.response.status_code"
                  value:
                    string_value: "%RESPONSE_CODE%"
          codec_type: AUTO
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: service2_route
            virtual_hosts:
            - name: service2
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_cluster2
                decorator:
                  operation: routeToService2
