syntax = "proto3";

package envoy.extensions.credentials.generic.v3;

import "envoy/extensions/transport_sockets/tls/v3/secret.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.credentials.generic.v3";
option java_outer_classname = "BearerTokenProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/credentials/generic/v3;genericv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Generic Credential]
// [#not-implemented-hide:]
// [#extension: envoy.credentials.generic]

// Generic Credential to inject into the proxied requests.
//
message Generic {
  // The header that will be injected to the HTTP request headers with the provided credential.
  // If not set, filter will default to: ``Authorization``
  string header = 1
    [(validate.rules).string = {well_known_regex: HTTP_HEADER_NAME ignore_empty: true}];

  // The credential that will be injected to the HTTP request headers as the header value.
  transport_sockets.tls.v3.SdsSecretConfig credential = 2
      [(validate.rules).message = {required: true}];
}
