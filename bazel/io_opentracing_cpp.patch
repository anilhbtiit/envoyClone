diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1721fb3..31f60b7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -52,7 +52,7 @@ if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
 elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
 elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
-  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_RELEASE} -D_SCL_SECURE_NO_WARNINGS")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_SCL_SECURE_NO_WARNINGS")
 endif()
 
 # ==============================================================================
diff --git a/mocktracer/BUILD b/mocktracer/BUILD
index 3b22bab..e032f7e 100644
--- a/mocktracer/BUILD
+++ b/mocktracer/BUILD
@@ -7,13 +7,19 @@ cc_library(
     deps = [
         "//:opentracing",
     ],
+    alwayslink = 1,
 )
 
 cc_binary(
     name = "libmocktracer_plugin.so",
+    linkopts = [
+        "-Wl,--version-script=$(location :tracer-export-map.ld)",
+    ],
     linkshared = 1,
+    linkstatic = 1,
     visibility = ["//visibility:public"],
     deps = [
-        "//mocktracer:mocktracer"
+        "//mocktracer:mocktracer",
+        "//mocktracer:tracer-export-map.ld",
     ],
 )
diff --git a/mocktracer/tracer-export-map.ld b/mocktracer/tracer-export-map.ld
new file mode 100644
index 0000000..66a4a4f
--- /dev/null
+++ b/mocktracer/tracer-export-map.ld
@@ -0,0 +1,5 @@
+{
+  global:
+    OpenTracingMakeTracerFactory;
+  local: *;
+};
diff --git a/src/dynamic_load_unix.cpp b/src/dynamic_load_unix.cpp
index 17e08fd..7e8ac02 100644
--- a/src/dynamic_load_unix.cpp
+++ b/src/dynamic_load_unix.cpp
@@ -35,7 +35,13 @@ DynamicallyLoadTracingLibrary(const char* shared_library,
                               std::string& error_message) noexcept try {
   dlerror();  // Clear any existing error.
 
-  const auto handle = dlopen(shared_library, RTLD_NOW | RTLD_LOCAL);
+  const auto handle = dlopen(shared_library, RTLD_NOW | RTLD_LOCAL
+#if defined(__has_feature)
+#if __has_feature(address_sanitizer)
+      | RTLD_NODELETE
+#endif
+#endif
+  );
   if (handle == nullptr) {
     error_message = dlerror();
     return make_unexpected(dynamic_load_failure_error);
