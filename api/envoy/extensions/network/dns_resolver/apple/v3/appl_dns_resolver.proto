syntax = "proto3";

package envoy.extensions.network.dns_resolver.apple.v3;

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.network.dns_resolver.apple.v3";
option java_outer_classname = "ApplDnsResolverProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: apple DNS resolver configuration]

// Configuration for apple DNS resolver
// For Envoy running on Apple system, to use apple DNS library as DNS resolver, the following need to be done:
// 1) In file: source/extensions/extensions_build_config.bzl, enable Apple DNS extension by adding below line
//      "envoy.dns_resolver.apple":                "//source/extensions/network/dns_resolver/apple:apple_dns_lib",
// 2) In Envoy running configuration file, add apple DNS as a typed extension in *typed_dns_resolver_config* field.
// For example, to add such configuration in bootstrap
//    :ref:'typed_dns_resolver_config <envoy_v3_api_field_config.bootstrap.v3.Bootstrap.typed_dns_resolver_config>'
// Here is the configuration:
//      typed_dns_resolver_config:
//        name: envoy.dns_resolver.apple
//        typed_config:
//          "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.apple.v3.AppleDnsResolverConfig
// Such configuration can be added in other configurations, like dynamic_forward_proxy, cluster.
message AppleDnsResolverConfig {
}
