syntax = "proto3";

package test.common.upstream;

import "validate/validate.proto";
import "test/fuzz/common.proto";
import "envoy/config/core/v3/health_check.proto";
import "google/protobuf/empty.proto";

message HttpRespond { //TODO: Split this across headers, body, and trailers?
  test.fuzz.Headers headers = 1;
  //https://github.com/nodejs/http-parser/blob/master/http_parser.c#L852
  string status = 2 [(validate.rules).string.pattern = "[0-9]+$*"];
}

message Respond {
  HttpRespond http_respond = 1;
  //TODO: TCP and gRPC Respond
  bool second_host = 4;
}

message TriggerIntervalTimer {
  bool second_host = 1;
}

message TriggerTimeoutTimer {
  bool second_host = 1;
}

message RaiseEvent {
  oneof event_selector {
    option (validate.required) = true;
    google.protobuf.Empty connected = 1;
    google.protobuf.Empty remote_close = 2;
    google.protobuf.Empty local_close = 3;
  }
  bool second_host = 4;
}

message Action {
  oneof action_selector {
    Respond respond = 1;
    TriggerIntervalTimer trigger_interval_timer = 2;
    //TODO: respondBody, respondTrailers
    TriggerTimeoutTimer trigger_timeout_timer = 3;
    RaiseEvent raise_event = 4;
  }
}

message HealthCheckTestCase {
  envoy.config.core.v3.HealthCheck health_check_config = 1
      [(validate.rules).message.required = true];
  repeated Action actions = 2;
  bool create_second_host = 3;
  bool http_verify_cluster = 4; //Determines if verify cluster setting is on
  bool start_failed = 5;
}
