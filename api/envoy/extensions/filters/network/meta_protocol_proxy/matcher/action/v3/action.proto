syntax = "proto3";

package envoy.extensions.filters.network.meta_protocol_proxy.matcher.action.v3;

import "envoy/config/route/v3/route_components.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.meta_protocol_proxy.matcher.action.v3";
option java_outer_classname = "RouteActionProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;
option (udpa.annotations.file_status).work_in_progress = true;

// [#protodoc-title: Meta Protocol Proxy Route Action Configuration]

// Configuration for the route match action.
// [#not-implemented-hide:]
message RouteAction {
  oneof cluster_specifier {
    option (validate.required) = true;

    // Indicates the upstream cluster to which the request should be routed.
    string cluster = 1;

    // Multiple upstream clusters can be specified for a given route. The request is routed to one
    // of the upstream clusters based on weights assigned to each cluster.
    // Currently ClusterWeight only supports the name and weight fields.
    config.route.v3.WeightedCluster weighted_clusters = 2;
  }
  //TODO other configuration: RetryPolicy, Mirroring, Fault Injection, etc.
}
