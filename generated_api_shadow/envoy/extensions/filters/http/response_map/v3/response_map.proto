syntax = "proto3";

package envoy.extensions.filters.http.response_map.v3;

import "envoy/config/response_map/v3/response_map.proto";

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.http.response_map.v3";
option java_outer_classname = "ResponseMapProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: ResponseMap]
// Response map filter :ref:`configuration overview <config_http_filters_response_map>`.
// [#extension: envoy.filters.http.response_map]

// The filter configuration for response mapping.
message ResponseMap {
  // The response map to use to customize HTTP responses read by Envoy.
  config.response_map.v3.ResponseMap response_map = 1 [(validate.rules).message = {required: true}];
}

// Extra settings on a per virtualhost/route/weighted-cluster level.
message ResponseMapPerRoute {
  oneof override {
    option (validate.required) = true;

    // Disable the response map filter for this particular vhost or route.
    // If disabled is specified in multiple per-filter-configs, the most specific one will be used.
    bool disabled = 1 [(validate.rules).bool = {const: true}];

    // Override the global configuration of the response map filter with this new config.
    config.response_map.v3.ResponseMap response_map = 2
        [(validate.rules).message = {required: true}];
  }
}
