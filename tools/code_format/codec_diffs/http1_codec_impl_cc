--- 
+++ 
@@ -1,4 +1,4 @@
-#include "common/http/http1/codec_impl.h"
+#include "common/http/http1/codec_impl_legacy.h"
 
 #include <cstdint>
 #include <memory>
@@ -23,6 +23,7 @@
 
 namespace Envoy {
 namespace Http {
+namespace Legacy {
 namespace Http1 {
 namespace {
 
@@ -43,6 +44,7 @@
 
 using Http1ResponseCodeDetails = ConstSingleton<Http1ResponseCodeDetailValues>;
 using Http1HeaderTypes = ConstSingleton<Http1HeaderTypesValues>;
+using Envoy::Http::Http1::HeaderKeyFormatterPtr;
 
 const StringUtil::CaseUnorderedSet& caseUnorderdSetContainingUpgradeAndHttp2Settings() {
   CONSTRUCT_ON_FIRST_USE(StringUtil::CaseUnorderedSet,
@@ -52,7 +54,7 @@
 
 HeaderKeyFormatterPtr formatter(const Http::Http1Settings& settings) {
   if (settings.header_key_format_ == Http1Settings::HeaderKeyFormat::ProperCase) {
-    return std::make_unique<ProperCaseHeaderKeyFormatter>();
+    return std::make_unique<Envoy::Http::Http1::ProperCaseHeaderKeyFormatter>();
   }
 
   return nullptr;
@@ -64,7 +66,7 @@
 const std::string StreamEncoderImpl::LAST_CHUNK = "0\r\n";
 
 StreamEncoderImpl::StreamEncoderImpl(ConnectionImpl& connection,
-                                     HeaderKeyFormatter* header_key_formatter)
+                                     Envoy::Http::Http1::HeaderKeyFormatter* header_key_formatter)
     : connection_(connection), disable_chunk_encoding_(false), chunk_encoding_(true),
       processing_100_continue_(false), is_response_to_head_request_(false),
       is_content_length_allowed_(true), header_key_formatter_(header_key_formatter) {
@@ -1089,6 +1091,7 @@
 }
 
 } // namespace Http1
+} // namespace Legacy
 } // namespace Http
 } // namespace Envoy
 