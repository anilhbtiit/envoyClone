syntax = "proto3";

package envoy.extensions.private_key_providers.composite.v3alpha;

import "envoy/config/core/v3/base.proto";

import "google/protobuf/duration.proto";

import "udpa/annotations/sensitive.proto";
import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.private_key_providers.composite.v3alpha";
option java_outer_classname = "CompositeProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/private_key_providers/composite/v3alpha";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: `Composite` private key provider]
// [#extension: envoy.tls.key_providers.composite]

// [#not-implemented-hide:]
// This provider allows to specify a list of private key providers and will go through each provider,
// find out one available.
message CompositePrivateKeyMethodConfig {
  // A list of private key providers, and at least one private key provider provided.
  repeated PrivateKeyProvider private_key_provider = 1 [(validate.rules).repeated = {min_items: 1}];
}
