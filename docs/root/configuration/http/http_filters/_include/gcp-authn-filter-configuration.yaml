static_resources:
  filter_chains:
    filters:
      name: "http"
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        codec_type: HTTP2
        stat_prefix: "config_test"
        route_config:
          name: "route_config_0"
          virtual_hosts:
            name: "integration"
            domains: "*"
            routes:
              match:
                prefix: "/"
              route:
                cluster: "cluster_0"
        http_filters:
          name: "envoy.filters.http.gcp_authn"
          typed_config:
            "@type": type.googleapis.com/net.envoy.source.extensions.filters.http.metadata.GcpAuthnFilterConfig
          http_uri:
            uri: "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
            cluster: "gcp_authn"
            timeout:
              seconds: 10
        http_filters:
          name: "envoy.filters.http.router"
        access_log:
          name: "accesslog"
          filter:
            not_health_check_filter:
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/dev/null"
        delayed_close_timeout:
          nanos: 100
  clusters:
    # Cluster for fake destination service which has typed metadata that contains the audience information.
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options:
            {}
      load_assignment:
        endpoints:
          lb_endpoints:
              endpoint:
                address:
                  socket_address:
                    address: ::1
                    port_value: 36075
        cluster_name: cluster_0
      metadata:
        typed_filter_metadata:
          envoy.filters.http.gcp_authn:
            "@type": type.googleapis.com/envoy.extensions.filters.http.gcp_authn.v3.Audience
            url: http:#test.com
      connect_timeout: 5s
      name: cluster_0
    # Cluster for fake metadata server.
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options:
            {}
      load_assignment:
        endpoints:
          lb_endpoints:
              endpoint:
                address:
                  socket_address:
                    address: ::1
                    port_value: 41713
        cluster_name: gcp_authn
      connect_timeout: 5s
      name: gcp_authn
  secrets:
    name: secret_static_0
    tls_certificate:
      certificate_chain:
        inline_string: DUMMY_INLINE_BYTES
      private_key:
        inline_string: DUMMY_INLINE_BYTES
      password:
        inline_string: DUMMY_INLINE_BYTES

dynamic_resources:
  lds_config:
    resource_api_version: V3
    path: /tmp/envoy_test_tmp.eth42V/170599_1647616221474515
  admin:
    access_log:
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /dev/null
      name: envoy.access_loggers.file
    address:
      socket_address:
        address: ::1
        port_value: 0
  layered_runtime:
    layers:
      static_layer:
        {}
      name: static_layer
      admin_layer:
        {}
      name: admin
