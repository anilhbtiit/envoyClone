syntax = "proto3";

package envoy.extensions.common.key_value.v3;

import "envoy/config/core/v3/extension.proto";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.common.key_value.v3";
option java_outer_classname = "ConfigProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Key Value Store storage plugin]

// [#alpha:]
// This shared configuration for Envoy key value stores.
message KeyValueStoreConfig {
  // [#extension-category: envoy.common.key_value]
  config.core.v3.TypedExtensionConfig config = 1 [(validate.rules).message = {required: true}];

  // The interval at which the key value store should be flushed to long term
  // storage.
  google.protobuf.Duration flush_interval = 2;
}

// [#alpha:]
// [#extension: envoy.common.key_value.file_based]
// This is configuration to flush a key value store out to disk.
message FileBasedKeyValueStoreConfig {
  // The filename to read the keys and values from, and write the keys and
  // values to.
  string filename = 1 [(validate.rules).string = {min_len: 1}];
}
