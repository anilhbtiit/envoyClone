syntax = "proto3";

package test.common.upstream;

import "envoy/config/core/v3/health_check.proto";

message HealthCheckConfig {
    //fields that change logic that are common amongst all types of health checkers
    int32 timeout = 1;
    int32 interval = 2;
    int32 initial_jitter = 3;
    int32 interval_jitter = 4;
    int32 interval_jitter_percent = 5;
    int32 unhealthy_threshold = 6;
    int32 healthy_threshold = 7;
    bool reuse_connection = 8;
    int32 no_traffic_interval = 9;
    int32 unhealthy_interval = 10;
    int32 unhealthy_edge_interval = 11;
    int32 healthy_edge_interval = 12;
    bool always_log_health_check_failures = 13;
    //tls_options = 14;
}

message Respond {
    string code = 1;
    bool conn_close = 2;
    bool proxy_close = 3;
    bool body = 4;
    bool trailers = 5;
    bool degraded = 6;
}

message DegradationBehavior {
    bool degraded = 1;
    int32 simulated_time_seconds_for_degradation = 2;
}

message StreamCreate {

}

message HttpAction {
    oneof action_selector {
        Respond respond = 1;
        StreamCreate stream_create = 2;
        //DegradationBehavior = 3;
    }
}

message HttpHealthCheckConfig {
    HealthCheckConfig config = 1;
    envoy.config.core.v3.HealthCheck.HttpHealthCheck http_config = 2;
    repeated HttpAction actions = 3;
}

message HealthCheckTestCase {
    oneof health_check_type_selector {
        HttpHealthCheckConfig http_config = 1;
        //TcpHealthCheckConfig tcp_config = 2;
        //gRPCHealthCheckConfig grpc_config = 3;
    }
}