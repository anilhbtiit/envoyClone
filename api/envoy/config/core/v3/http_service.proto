syntax = "proto3";

package envoy.config.core.v3;

import "envoy/config/core/v3/base.proto";

import "google/protobuf/duration.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.core.v3";
option java_outer_classname = "HttpServiceProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: HTTP services]

// HTTP service configuration.
// [#next-free-field: 6]
message HttpService {
  // The name of the upstream HTTP cluster. SSL credentials will be supplied
  // in the :ref:`Cluster <envoy_v3_api_msg_config.cluster.v3.Cluster>` :ref:`transport_socket
  // <envoy_v3_api_field_config.cluster.v3.Cluster.transport_socket>`.
  string cluster_name = 1 [(validate.rules).string = {min_len: 1}];

  // The path to use for the service.
  // The default is an empty string.
  string path = 2;

  // Specifies a list of HTTP headers that should be added to each request
  // handled by this virtual host.
  repeated HeaderValueOption request_headers_to_add = 3
      [(validate.rules).repeated = {max_items: 1000}];

  // The timeout for the HTTP request. This is the timeout for a specific
  // request.
  // Sets the maximum duration in milliseconds that a response can take to arrive upon request.
  google.protobuf.Duration timeout = 4 [(validate.rules).duration = {
    required: true
    gte {}
  }];

  // Specifies the hostname that should be added to the Host header to each request.
  // The default is an empty string.
  string hostname = 5;
}
