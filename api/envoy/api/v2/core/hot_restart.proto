syntax = "proto3";

package envoy.api.v2.core;

option java_outer_classname = "HotRestartProto";
option java_multiple_files = true;
option java_package = "io.envoyproxy.envoy.api.v2.core";

import "envoy/admin/v2alpha/metrics.proto";

message HotRestartMessage {
  // Child->parent requests
  message Request {
    message PassListenSocket {
      string address = 1;
    }
    message ShutdownAdmin {
    }
    message Stats {
    }
    message DrainListeners {
    }
    message Terminate {
    }
    oneof request {
      PassListenSocket pass_listen_socket = 1;
      ShutdownAdmin shutdown_admin = 2;
      Stats stats = 3;
      DrainListeners drain_listeners = 4;
      Terminate terminate = 5;
    }
  }

  // Parent->child replies
  message Reply {
    message PassListenSocket {
      int32 fd = 1;
    }
    message ShutdownAdmin {
      uint64 original_start_time = 1;
    }
    message Stats {
      // Values for server_stats, which don't fit with the "combination logic" approach.
      uint64 memory_allocated = 1;
      uint64 num_connections = 2;

      // The parent's current values for various stats in its stats store.
      repeated envoy.admin.v2alpha.SimpleMetric counters = 3;
      repeated envoy.admin.v2alpha.SimpleMetric gauges = 4;
      repeated envoy.admin.v2alpha.SimpleMetric indicators = 5;
    }
    oneof reply {
      // When this oneof is of the PassListenSocketReply type, there is a special
      // implied meaning: the recvmsg that got this proto has control data to make
      // the passing of the fd work, so make use of CMSG_SPACE etc.
      PassListenSocket pass_listen_socket = 1;
      ShutdownAdmin shutdown_admin = 2;
      Stats stats = 3;
    }
  }

  oneof requestreply {
    Request request = 1;
    Reply reply = 2;
  }

  bool didnt_recognize_your_last_message = 3;
}
