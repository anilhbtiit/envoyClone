// DO NOT EDIT - THIS FILE WAS GENERATED
// clang-format off
#include "extensions/filters/network/kafka/requests.h"
#include "extensions/filters/network/kafka/kafka_request_parser.h"
#include "extensions/filters/network/kafka/parser.h"

namespace Envoy {
namespace Extensions {
namespace NetworkFilters {
namespace Kafka {

const RequestParserResolver RequestParserResolver::INSTANCE;

ParserSharedPtr RequestParserResolver::createParser(int16_t api_key, int16_t api_version,
                                                    RequestContextSharedPtr context) const {

{% for request_type in request_types %}{% for field_list in request_type.compute_field_lists() %}
  if ({{ request_type.get_extra('api_key') }} == api_key && {{ field_list.version }} == api_version) {
    return std::make_shared<{{ request_type.name }}V{{ field_list.version }}Parser>(context);
  }{% endfor %}{% endfor %}
  return std::make_shared<SentinelParser>(context);
}

} // namespace Kafka
} // namespace NetworkFilters
} // namespace Extensions
} // namespace Envoy
// clang-format on
