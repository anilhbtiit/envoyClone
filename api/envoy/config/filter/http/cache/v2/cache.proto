syntax = "proto3";

package envoy.config.filter.http.cache.v2;

import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.filter.http.cache.v2";
option java_outer_classname = "CacheProto";
option java_multiple_files = true;

// [#protodoc-title: HTTP Cache Filter]
// Pluggable HTTP Cache :ref:`configuration overview <config_http_filters_cache>`.
// [#extension: envoy.filters.http.cache]

// bqDesign<https://docs.google.com/document/d/1WPuim_GzhfdsnIj_tf-fIeutK0jO4aVQfVrLJFoLN3g/view>bq_
message Cache {
  message QueryParams {
    repeated string query_string_keys = 1;
  }

  message KeyCreatorParams {
    // If true, exclude the URL scheme from the cache key.
    bool exclude_scheme = 1;

    // If true, exclude the host from the cache key.
    bool exclude_host = 2;

    oneof query_string_keys {
      // If set, only query params in this list are included in the cache
      // key. Any other query params will not affect cache lookup. If set to an
      // empty list, the query string will be entirely ignored in cache lookups.
      QueryParams query_string_keys_included = 3;

      // If set, query params in this list are excluded from the cache key, and
      // will not affect cache lookup. Setting this to an empty list is
      // equivalent to not setting it (but is less efficient).
      QueryParams query_string_keys_excluded = 4;
    }
  }

  // Name of cache implementation to use.
  string name = 1 [(validate.rules).string = {min_bytes: 1}];

  // List of allowed Vary headers. These headers will be provided to caches in lookups, and the
  // cache filter will only insert responses whose Vary headers (if any) are all in this list. For
  // example, if an origin supplies "vary:user-agent" in a response, the response will only be
  // inserted if "user-agent" is in this list.
  //
  // TODO(toddmgreer) implement vary headers
  // repeated string allowed_vary_headers = 2;

  // TODO(toddmgreer) implement key customization
  // KeyCreatorParams key_creator_params = 3;

  // TODO(toddmgreer) add size limit
}
